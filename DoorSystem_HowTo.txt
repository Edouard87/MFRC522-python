1 - Enable SPI
    sudo raspi-config

2-  Download MFCR522-python
    git clone https://github.com/danjperron/MFRC522-python

3-  Connect the reader according to the README.md of the github

4-  Check if the reader is able to read a card
    
    cd MFRC522-python
    python Read.py

    now approach a card to the reader

5-  install mariadb mysql server
     sudo apt-get install mysql-server python-mysqldb


6-  create your data base access
     sudo msql -u root -p       (set root password)

     create dabase rfidcardsdb and user

    MariaDB [(none)]> create database rfidcardsdb;
    MariaDB [(none)]> create user 'rfidreader'@localhost identified by 'password';
    MariaDB [(none)]> grant all on rfidcardsdb.* to 'rfidreader' identified by 'password'
    MariaDB [(none)]> exit


    P.S. change password to a real password

    // now set the password for rfidreader


7-  create the database structure with specific fields

pi@Pi2:~/MFRC522-python $ mysql -u rfidreader  -p
Enter password: 
Welcome to the MariaDB monitor.  Commands end with ; or \g.
Your MariaDB connection id is 26
Server version: 10.1.23-MariaDB-9+deb9u1 Raspbian 9.0

Copyright (c) 2000, 2017, Oracle, MariaDB Corporation Ab and others.

Type 'help;' or '\h' for help. Type '\c' to clear the current input statement.

MariaDB [(none)]> use rfidcardsdb
Database changed
MariaDB [rfidcardsdb]> CREATE TABLE `cards` (
    -> `card_id` int(11) NOT NULL AUTO_INCREMENT,
    -> `serial_no` varchar(20) NOT NULL,
    -> `user_id` varchar(40) NOT NULL,
    -> `valid` tinyint(1) NOT NULL DEFAULT '0',
    -> PRIMARY KEY (`card_id`));
Query OK, 0 rows affected (3.37 sec)



8-  Read the rfid card Id of each cards and store it somewhere. 
    
     python Read.py


9- fill the data base 
    
    mysql -u rfidreader -p

    MariaDB [(none)]> use rfidcardsdb
    Database changed
    MariaDB [rfidcardsdb]> describe cards;
    +-----------+-------------+------+-----+---------+----------------+
    | Field     | Type        | Null | Key | Default | Extra          |
    +-----------+-------------+------+-----+---------+----------------+
    | card_id   | int(11)     | NO   | PRI | NULL    | auto_increment |
    | serial_no | varchar(20) | NO   |     | NULL    |                |
    | user_id   | varchar(40) | NO   |     | NULL    |                |
    | valid     | tinyint(1)  | NO   |     | 0       |                |
    +-----------+-------------+------+-----+---------+----------------+
    4 rows in set (0.00 sec)

    MariaDB [rfidcardsdb]> INSERT INTO cards (card_id,serial_no,user_id,valid) values("1","803697F280BA04","Daniel","1");
    Query OK, 1 row affected (0.02 sec)
    MariaDB [rfidcardsdb]> INSERT INTO cards (card_id,serial_no,user_id,valid) values("2","0658D9A5","Claude","1");
    Query OK, 1 row affected (0.02 sec)
    MariaDB [rfidcardsdb]> INSERT INTO cards (card_id,serial_no,user_id,valid) values("3","0658D555","Gilbert","0"); 
    Query OK, 1 row affected (1.29 sec)
    MariaDB [rfidcardsdb]> INSERT INTO cards (card_id,serial_no,user_id,valid) values("4","458E812A","Chantal","1");
    Query OK, 1 row affected (0.02 sec)

    MariaDB [rfidcardsdb]> select * from cards;
    +---------+----------------+---------+-------+
    | card_id | serial_no      | user_id | valid |
    +---------+----------------+---------+-------+
    |       1 | 803697F280BA04 | Daniel  |     1 |
    |       2 | 0658D9A5       | Claude  |     1 |
    |       3 | 0658D555       | Gilbert |     0 |
    |       4 | 458E812A       | Chantal |     1 |
    +---------+----------------+---------+-------+
    4 rows in set (0.00 sec)

10- Let's install pymsql for python3

    sudo pip3 install PyMySQL

11 - And run DoorSystem

pi@Pi2:~/MFRC522-python $ python3 DoorSystem.py
Door System using Raspberry Pi
Press Ctrl-C to stop.
803697F280BA04
Card 1:803697F280BA04 from user Daniel Accepted!
024CD43C
Card ?:024CD43C from unknown  Refused!
0658D555
Card 3:0658D555 from user Gilbert Invalid
458E812A
Card 4:458E812A from user Chantal Accepted!
0658D9A5
Card 2:0658D9A5 from user Claude Accepted!

 







    
